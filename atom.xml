<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wing</title>
  
  <subtitle>大道至简</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wing-ho.github.io/"/>
  <updated>2018-09-10T02:24:18.427Z</updated>
  <id>http://wing-ho.github.io/</id>
  
  <author>
    <name>Wing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spacemacs中文字体终极解决方案</title>
    <link href="http://wing-ho.github.io/2015/12/08/Spacemacs%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://wing-ho.github.io/2015/12/08/Spacemacs中文字体解决方案/</id>
    <published>2015-12-07T16:00:00.000Z</published>
    <updated>2018-09-10T02:24:18.427Z</updated>
    
    <content type="html"><![CDATA[<p>安装Spacemacs之后，用Sogou输入法可以直接输入，以为Spacemacs编辑器已经把中文问题完美解决了。使用的过程当中，发现Spacemacs默认配置对中文支持也不是非常完美的。国内使用Emacs的群体不是特别大，Baidu基本上找不到可靠的解决方案，没有google恐怕这个坑是跳不过去了，参考文章当中的各种方案都试了一遍才找到解决方案，最终通过修改中英文默认字体解决了。</p><h1 id="修改spacemacs的默认字体"><a href="#修改spacemacs的默认字体" class="headerlink" title="修改spacemacs的默认字体"></a>修改spacemacs的默认字体</h1><p>我用的系统是Arch Linux，系统默认的字体是Ubuntu Mono，但Spacemacs默认的字体是Source Code Pro，我打印系统的字体列表，发现并没有这种字体，所以我修改<code>.spacemacs</code>配置文件，把默认字体改为系统默认字体Ubuntu Mono。<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dotspacemacs-default-font '(<span class="string">"Source Code Pro"</span></span><br><span class="line">                               <span class="symbol">:size</span> <span class="number">14</span></span><br><span class="line">                               <span class="symbol">:weight</span> normal</span><br><span class="line">                               <span class="symbol">:width</span> normal</span><br><span class="line">                               <span class="symbol">:powerline-scale</span> <span class="number">1.1</span>)</span><br><span class="line">dotspacemacs-default-font '(<span class="string">"Ubuntu Mono"</span></span><br><span class="line">                               <span class="symbol">:size</span> <span class="number">16</span></span><br><span class="line">                               <span class="symbol">:weight</span> normal</span><br><span class="line">                               <span class="symbol">:width</span> normal</span><br><span class="line">                               <span class="symbol">:powerline-scale</span> <span class="number">1.1</span>)</span><br></pre></td></tr></table></figure></p><h1 id="打印系统的字体列表的方法"><a href="#打印系统的字体列表的方法" class="headerlink" title="打印系统的字体列表的方法"></a>打印系统的字体列表的方法</h1><p>新建一个名为test.el的文件内容如下，用于打印系统的拥有的字体。Spc + m + e + c执行这行代码，在message buffer当中就可以看到系统的字体列表。<br><figure class="highlight hy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">print</span></span> (<span class="name">font-family-list</span>))</span><br></pre></td></tr></table></figure></p><h1 id="修改spacemacs的默认中文字体"><a href="#修改spacemacs的默认中文字体" class="headerlink" title="修改spacemacs的默认中文字体"></a>修改spacemacs的默认中文字体</h1><p>如果系统中还没有“文泉驿等宽微米黑”字体，可以通过一下代码安装。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install  ttf-wqy-microhei</span><br></pre></td></tr></table></figure></p><p>为了org-mode下的表格完美对齐，需要增加中文等宽字体配置。修改.spacemacs配置文件，找到defun dotspacemacs/user-config ()，添加如下代码设置中文等宽字体。<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;;设置中文字体方法一</span></span><br><span class="line">  (<span class="name">dolist</span> (<span class="name">charset</span> '(kana han symbol cjk-misc bopomofo))</span><br><span class="line">    (<span class="name">set-fontset-font</span> (<span class="name">frame-parameter</span> <span class="literal">nil</span> 'font)</span><br><span class="line">                      charset (<span class="name">font-spec</span> <span class="symbol">:family</span> <span class="string">"文泉驿等宽微米黑"</span></span><br><span class="line">                                         <span class="symbol">:size</span> <span class="number">16</span>)))</span><br><span class="line"><span class="comment">;;设置中文字体方法二</span></span><br><span class="line">  (<span class="name">set-fontset-font</span> <span class="string">"fontset-default"</span></span><br><span class="line">                    (<span class="name">cons</span> (<span class="name">decode-char</span> 'ucs <span class="number">#x4e00</span>)</span><br><span class="line">                          (<span class="name">decode-char</span> 'ucs <span class="number">#x9fff</span>))</span><br><span class="line">                    <span class="string">"-*-文泉驿等宽微米黑-*-*-*-*-16-*-*-*-*-*-*-*"</span>)</span><br></pre></td></tr></table></figure></p><p>spacemacs官方的layer当中有一个为了改善中文环境下的体验的层chinese layer，我的配置是启用了这个层的，这个layer当中有一个叫做pangu-spacing的包，是用来更好地显示中英文混排的，默认情况下，中英文混排会在英文前后添加1个空格分割显示，但这个空格会影响org-table的显示效果，保存的也时候也会写入到文件当中。我用org-mode来写博客的时候，经常会遇到中英文路径的时候，这个空格就变得很碍事了，需要在org-mode下禁用写入插入的功能。在.spacemacs配置文件中add hook无效，就直接将变量定义在配置文件中。因为pangu-spacing是全局有效的，各种模式下中英文混排都会添加空格，这样的排版方式确实十分美观，但有时多余的空格难免会造成困扰，这个时候只需要M-x pangu-spacing就可以关闭盘古之白。<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;;add hook的方法无效</span></span><br><span class="line">(<span class="name">add-hook</span> 'org-mode (<span class="name">lambda</span>()</span><br><span class="line">  (<span class="name">global-pangu-spacing-mode</span> <span class="number">0</span>)</span><br><span class="line">  (<span class="name">set</span> (<span class="name">make-local-variable</span> 'pangu-spacing-real-insert-separtor) <span class="literal">nil</span>)))</span><br><span class="line"><span class="comment">;;直接定义在(defun dotspacemacs/user-config ()</span></span><br><span class="line">  (<span class="name">global-pangu-spacing-mode</span> <span class="number">0</span>)</span><br><span class="line">  (<span class="name">set</span> (<span class="name">make-local-variable</span> 'pangu-spacing-real-insert-separtor) <span class="literal">nil</span>)</span><br></pre></td></tr></table></figure></p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ol><li><a href="http://oinil.blogspot.com/2013/09/emacs.html" target="_blank" rel="noopener">Emacs自定义中/英文字体终极解决方案</a></li><li>[Chinese-fonts-setup](<a href="https://github.com/tumashu/chinese-fonts-set" target="_blank" rel="noopener">https://github.com/tumashu/chinese-fonts-set</a></li><li><a href="http://baohaojun.github.io/blog/2012/12/19/perfect-emacs-chinese-font.html" target="_blank" rel="noopener">狠狠地折腾了一把Emacs中文字体</a></li><li><a href="http://zhuoqiang.me/torture-emacs.html" target="_blank" rel="noopener">折腾 Emacs</a></li><li><a href="http://coldnew.github.io/blog/2013/11-16_d2f3a/" target="_blank" rel="noopener">解決 org-mode 表格內中英文對齊的問題</a></li><li><a href="https://github.com/syl20bnr/spacemacs/tree/master/layers/chinese" target="_blank" rel="noopener">Chinese Layer</a></li><li><a href="https://github.com/et2010/Han" target="_blank" rel="noopener">Han Layer</a></li><li><a href="http://chriszheng.science/2015/10/08/Pangu-spacing/" target="_blank" rel="noopener">盘古之白</a></li><li><a href="http://coldnew.github.io/blog/2013/05-20_5cbb7/" target="_blank" rel="noopener">讓你的 emacs 自動在英文與中文之間加入空白</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安装Spacemacs之后，用Sogou输入法可以直接输入，以为Spacemacs编辑器已经把中文问题完美解决了。使用的过程当中，发现Spacemacs默认配置对中文支持也不是非常完美的。国内使用Emacs的群体不是特别大，Baidu基本上找不到可靠的解决方案，没有goog
      
    
    </summary>
    
      <category term="Emacs" scheme="http://wing-ho.github.io/categories/Emacs/"/>
    
    
  </entry>
  
  <entry>
    <title>自制番茄定时器</title>
    <link href="http://wing-ho.github.io/2015/11/03/%E8%87%AA%E5%88%B6%E7%95%AA%E8%8C%84%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
    <id>http://wing-ho.github.io/2015/11/03/自制番茄定时器/</id>
    <published>2015-11-02T16:00:00.000Z</published>
    <updated>2018-09-10T02:24:20.215Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu下居然没有找到番茄定时器，太不可思议了，google一下，发现有人用Linux下的At命令实现了，但是我觉得不够完美，不就是一个定时器嘛，自己动手做一个就好了。</p><p>我是完全没有写过Linux  GUI程序的，Python也是半桶水，这里坑很多，一个个趟过来了，所以很有必要写一片博客来记录一下。</p><p>一开始想用python-wxtools来做GUI的，后来看到Ubuntu官方的ApplicationIndicators示例代码，跟wxpython暂时没有关系，于是就回归gtk。在Ubuntu下做一个看起来高大上的定时器，无非是将<br>GUI，系统托盘，定时器，气泡消息提示4样东西用python粘起来而已。</p><p>安装必须的python工具包<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install <span class="keyword">python</span>-gtk2 <span class="keyword">python</span>-appindicator <span class="keyword">python</span>-gobject <span class="keyword">python</span>-notify</span><br></pre></td></tr></table></figure></p><p>备注：<br>python-gtk2 Linux下的界面构建工具包<br>python-appindicator Linux下的系统托盘工具包<br>python-gobject 托盘工具包依赖的包，并且包含定时函数<br>python-notify  Ubuntu的气泡提示工具包</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol><li>开始计时和结束计时提醒<br>开启一个番茄时间25分钟，和休息5分钟，可以用一个定时器来完成，目前使用了两个定时器。</li><li>提醒的方式，目前是通过气泡消息提示的方式实现的</li><li>可以加入声音提示</li><li>通过位于顶部的透明的窗口实现进度提示</li></ol><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>番茄计时器不是没有，是自己太low了，使用Linux的经验还是太少了，Linux下早就用类似的工具，比如workrave,pomodoro就是类似的计时工具，还有就是基于org-mode的org-pomodoro。 </p><p>参考文献</p><ol><li><a href="http://segmentfault.com/a/1190000000453765" target="_blank" rel="noopener">Linux/Unix 下自制番茄钟</a></li><li><a href="https://wiki.ubuntu.com/DesktopExperienceTeam/ApplicationIndicators" target="_blank" rel="noopener">ApplicationIndicators</a></li><li><a href="http://askubuntu.com/questions/108764/how-do-i-send-text-messages-to-the-notification-bubbles" target="_blank" rel="noopener">How do I send text messages to the notification bubbles?</a></li><li><a href="https://ole.im/blog/2011/oct/20/python-notify" target="_blank" rel="noopener">python-notify example</a></li><li><a href="http://askubuntu.com/questions/223048/how-to-create-appindicator-with-python" target="_blank" rel="noopener">How to create AppIndicator with Python?</a></li><li><a href="http://www.pygtk.org/pygtk2tutorial/ch-TimeoutsIOAndIdleFunctions.html" target="_blank" rel="noopener">pygtk2tutorial</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ubuntu下居然没有找到番茄定时器，太不可思议了，google一下，发现有人用Linux下的At命令实现了，但是我觉得不够完美，不就是一个定时器嘛，自己动手做一个就好了。&lt;/p&gt;
&lt;p&gt;我是完全没有写过Linux  GUI程序的，Python也是半桶水，这里坑很多，一个个
      
    
    </summary>
    
      <category term="Python" scheme="http://wing-ho.github.io/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>安装Linux Mint 17.2</title>
    <link href="http://wing-ho.github.io/2015/11/01/%E5%AE%89%E8%A3%85Linux%20Mint%2017.2/"/>
    <id>http://wing-ho.github.io/2015/11/01/安装Linux Mint 17.2/</id>
    <published>2015-10-31T16:00:00.000Z</published>
    <updated>2018-09-10T02:24:18.967Z</updated>
    
    <content type="html"><![CDATA[<p>如果你习惯了开始菜单，又不习惯Ubuntu的Unity界面的设计，Linux Mint 17.2就是最适合你的一款了。</p><h2 id="删除我不需要的包"><a href="#删除我不需要的包" class="headerlink" title="删除我不需要的包"></a>删除我不需要的包</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">sudo</span> apt-<span class="meta">get</span> autoremove firefox  thunderbird libreoffice-<span class="meta">common</span></span><br></pre></td></tr></table></figure><h2 id="让Linux-Mint记住亮度设置"><a href="#让Linux-Mint记住亮度设置" class="headerlink" title="让Linux Mint记住亮度设置"></a>让Linux Mint记住亮度设置</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:nrbrtx/sysvinit-backlight</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install sysvinit-backlight</span><br></pre></td></tr></table></figure><h2 id="安装sogou输入法"><a href="#安装sogou输入法" class="headerlink" title="安装sogou输入法"></a>安装sogou输入法</h2><p>添加文件<code>/etc/apt/sources.list.d/sogoupinyin.list</code>，并添加如下内容<br>deb <a href="http://archive.ubuntukylin.com:10006/ubuntukylin" target="_blank" rel="noopener">http://archive.ubuntukylin.com:10006/ubuntukylin</a> trusty main<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> sogoupinyin</span><br></pre></td></tr></table></figure></p><h2 id="深度截图"><a href="#深度截图" class="headerlink" title="深度截图"></a>深度截图</h2><p>添加深度系列软件的PPA<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">add</span>-repository <span class="keyword">pp</span><span class="variable">a:noobslab</span>/deepin-sc</span><br><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install deepin-screenshot</span><br></pre></td></tr></table></figure></p><h2 id="安装中文语言包"><a href="#安装中文语言包" class="headerlink" title="安装中文语言包"></a>安装中文语言包</h2><p>sudo apt-get install language-pack-zh-hans language-pack-gnome-zh-hans</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果你习惯了开始菜单，又不习惯Ubuntu的Unity界面的设计，Linux Mint 17.2就是最适合你的一款了。&lt;/p&gt;
&lt;h2 id=&quot;删除我不需要的包&quot;&gt;&lt;a href=&quot;#删除我不需要的包&quot; class=&quot;headerlink&quot; title=&quot;删除我不需要的包&quot;
      
    
    </summary>
    
      <category term="Linux" scheme="http://wing-ho.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>多系统共存分区方案</title>
    <link href="http://wing-ho.github.io/2015/10/28/%E5%A4%9A%E7%B3%BB%E7%BB%9F%E5%85%B1%E5%AD%98%E5%88%86%E5%8C%BA%E6%96%B9%E6%A1%88/"/>
    <id>http://wing-ho.github.io/2015/10/28/多系统共存分区方案/</id>
    <published>2015-10-27T16:00:00.000Z</published>
    <updated>2018-09-10T02:24:18.787Z</updated>
    
    <content type="html"><![CDATA[<p>希望折腾的同学们，都喜欢在自己的电脑上安装各种各样的操作系统装B。我是99年开始有第一台电脑的，电脑预装的系统是Win98，在电脑报的帮助下，我学会了分区、重装系统和Ghost备份。上高中之后，可以很方便的买到盗版的软件光盘。我买到了Win XP，也就有了第一次安装双系统的经验 。我也从此走了一条爱折腾的不归路。<br>为什么要安装多个操作系统呢？因为Windows下有用Photoshop等大量应用软件，有些任务还是在Windows下做比较方便。还有UEFI开机速度比BIOS快，我不想浪费时间。可是，UEFI需要配合GPT分区使用。</p><h2 id="BIOS-MBR-Windows-Linux"><a href="#BIOS-MBR-Windows-Linux" class="headerlink" title="BIOS+MBR+Windows+Linux"></a>BIOS+MBR+Windows+Linux</h2><p>MBR分区有一个限制，就是只能有包含扩展分区在内，只能有4个主分区。对于想安装多系统的小伙伴来说，可能会觉得有点限制，特别是使用Diskgenius把MBR分区转换成GPT分区的时候，多于4个分区就没有办法转换了。对于爱折腾的你来说，可能你的笔记本也就因为这个限制只分了四个分区。</p><p>我的笔记本型号是HP 5310m，买回来的时候250G的硬盘，分区情况是这样的，一个Recovery分区，一个负责储存引导文件的的系统分区，一个系统盘，还有一个HP Quick WEB分区（其实就是一个定制版本的Linux），只有一个C盘，对于我这种比较喜欢安装各种各样系统来折腾的人来说，扩展分区都没有，怎么可以忍受的。所以第一时间删除了Recovery分区合并到系统分区中，Quick Web折腾一段时间之后发现，只是一个玩具而已，果断删除，合并到扩展分区当中，之后陆续安装过WinXP、Win7、Win2008、Win2012、Ubuntu、Deepin Linux、Linux Mint、Mac OS X lion和Arch Linux。<br>这个方案最容易实现，对于多个系统共存的兼容性是比较强的，只要先安装Windows然后再安装其他系统就可以了，MBR的限制主要单个分区大能超过2TB以及最多4个主分区。</p><h2 id="BIOS-GPT-Windows-Linux"><a href="#BIOS-GPT-Windows-Linux" class="headerlink" title="BIOS+GPT+Windows+Linux"></a>BIOS+GPT+Windows+Linux</h2><blockquote><p>MSDN 明确指出，Windows 只能安装于 BIOS + MBR 或是 UEFI + GPT 的组合上，而 BIOS + GPT 和 UEFI + MBR 是不允许的。这实在是太傲娇了——因为 BIOS + GPT + GRUB + Linux 是完全没有问题的。事实上，我的笔记本电脑刚安装的时候并没有考虑到往硬盘里灌 Windows，因此之前一直是 BIOS + GPT + GRUB 的配置，在这样的情况想让 Windows 入驻，简直是逼我上梁山…… 为什么 MSDN 声称 Windows 不能在 BIOS + GPT 工作？经过我的试验，发现其实只是 bootmgr 读不了 GPT 而已。直到 bootmgr 被唤醒之前，一切都是没有问题的，而 bootmgr 应该去读取 \Boot\BCD 然后再根据 BCD 去加载 \Windows\System32\winload.exe 和 ntoskrnl.exe。可是 bootmgr 读不了 GPT，直接导致它找不到 \Boot\BCD…… 那么怎么办呢？<br>换一个能读 GPT 的引导器，读取 BCD 之后正常加载 Windows 内核。——不好意思，这样的引导器不存在。在得出这个结论之前，我吃了很多苦。<br>将 BCD 放在 bootmgr 能读的地方。——比如一（小）块 MBR 存储设备，它不一定要是物理的，也能是虚拟的。在得出这个结论之前，我流了很多泪。<br>而 Windows 默认的安装程序要求又高、功能又弱，根本不会给你选择启动文件安装到哪里的，所以必须要手工安装。</p></blockquote><p>具体解决方案可以查看<a href="https://wzyboy.im/post/1049.html" target="_blank" rel="noopener">BIOS + GPT + GRUB + Linux + Windows 折腾笔记</a>。</p><h2 id="EFI-GPT-Windows-Linux"><a href="#EFI-GPT-Windows-Linux" class="headerlink" title="EFI+GPT+Windows+Linux"></a>EFI+GPT+Windows+Linux</h2><p>自从知道我的笔记本也支持UEFI启动之后，我就爱上了这种极速的启动体验。换了固态硬盘之后，10秒左右就能见到桌面，体验超赞的。因为笔记本的UEFI是64位的，这种启动方式下，只能安装64位的系统，原来2G的内存也显得捉襟见肘了，很快我也跟着升级了内存，4g已经是这台老笔记本能兼容的最大容量了。因为本人的笔记本自带的系统是Win7，驱动支持最完善也是Windows NT 6.1系列的系统了。但是64位的Win7的光盘里面bootx64.efi启动文件是被精简了的，需要从Win8安装光盘中复制过来。Win7系统虽然已经做得很不错了，但我还是觉得太臃肿了，使用过多种系统之后，Win2008 R2是适合 了，对于安装SQL Server等之类的服务器软件的限制也少一些。唯一不爽的地方就是服务器的系统精简得有点过了，没有蓝牙的协议栈，差点我的蓝牙键鼠套装没有办法使用了，最后发现可以使用IVT_BlueSoleil_8.0.395.0千月蓝牙驱动。</p><h2 id="BIOS-Hydrid-MBR-GPT-Windows-Linux"><a href="#BIOS-Hydrid-MBR-GPT-Windows-Linux" class="headerlink" title="BIOS+Hydrid MBR+GPT+Windows+Linux"></a>BIOS+Hydrid MBR+GPT+Windows+Linux</h2><blockquote><p>顾名思义，Hybrid MBR就是混合GPT分区表和MBR分区表，它的主体仍然是GPT分区表，只不过是对于硬盘中记录GPT分区表信息的部分进行一些改动，加入一个MBR分区表的信息，使得硬盘中的部分分区具备MBR分区表分区的特性。简单的说，Hybrid MBR就是可以让你从GPT分区上面选择4个以下（包括4个）分区，生成一个MBR分区表，进而欺骗windows让其识别硬盘是由这四个分区构成的MBR分区硬盘。</p></blockquote><p>具体分区方法参考<a href="http://blog.oobeta.com/archives/2013/06/08/2701.html" target="_blank" rel="noopener">GPT分区表与Hybrid MBR详解</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;希望折腾的同学们，都喜欢在自己的电脑上安装各种各样的操作系统装B。我是99年开始有第一台电脑的，电脑预装的系统是Win98，在电脑报的帮助下，我学会了分区、重装系统和Ghost备份。上高中之后，可以很方便的买到盗版的软件光盘。我买到了Win XP，也就有了第一次安装双系统的
      
    
    </summary>
    
      <category term="Linux" scheme="http://wing-ho.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>安装Ubuntu 15.10之后要做的事情</title>
    <link href="http://wing-ho.github.io/2015/10/21/%E5%AE%89%E8%A3%85Ubuntu%2015.10%E4%B9%8B%E5%90%8E%E8%A6%81%E5%81%9A%E7%9A%84%E4%BA%8B%E6%83%85/"/>
    <id>http://wing-ho.github.io/2015/10/21/安装Ubuntu 15.10之后要做的事情/</id>
    <published>2015-10-20T16:00:00.000Z</published>
    <updated>2018-10-01T09:13:19.013Z</updated>
    
    <content type="html"><![CDATA[<p>很久以前我就将Linux的各个发行版本，挨个安装过，文字渲染的效果始终比不上Windows，当然可以自己安装infinality字体渲染包，从安装好系统折腾到你能舒适使用，估计得折腾好几天。不能不提Deepin Linux，这个发行版对Linux中文本地化作了很大的贡献。Deepin Linux我曾经使用了很长一段时间，Deepin Linux的桌面环境还是非常不错的，但是想自己再定制一下，就困难一些了，它没有类似Gnome这样的插件机制，而且没有详细的说明文档，想自己再定制一下会觉得比较困难。比较不爽的是我用的蓝牙键鼠套装，每次开机之后，我都需要手动把蓝 牙模块打开，可能是Deepin Linux 2014.3、Linux mint17.2等都是基于Ubuntu 14定制的，默认蓝牙模块都是开机不启动的。找了很多资料，我都没有找到自动开启蓝牙模块的方法，新Ubuntu 15.10发布之后，发现它的蓝牙模块默认就是打开的，果断换成Ubuntu 15.10了。</p><p>用下来之后，发现这个系统的完成度已经非常高了，自带的中文字体和渲染效果都非常舒服。记得刚开始折腾Ubuntu的时候，安装完系统之后的第一件事情就是字体美化，其他地方字体难看，勉强能看也能接受，但是Terminal的英文字母重叠在一起就没有办法用了，每次重装总得弄上半天才把字体的问题解决了。现在系统安装好之后，字体渲染就已经非常棒了。可能你会不小心安装了下面这些字体而导致英文字母重叠的问题，解决方法很简单，就是删掉这些难看的字体。<br>最近发现Gnome版本的Ubuntu可能是一个更加好的发行版本，我自己已经彻底删掉了Unity，改成Gnome了，Gnome默认主题是为了适应触摸操控设计过的，按钮无比大，但可以安装Numix主题，界面会紧凑很多。</p><h2 id="删除难看的中文字体"><a href="#删除难看的中文字体" class="headerlink" title="删除难看的中文字体"></a>删除难看的中文字体</h2><p>打开语言支持会提示安装两种非常难看的中文字体，如果你按照提示安装了，字体的显示效果会变得奇丑无比的。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> <span class="builtin-name">remove</span> fonts-arphic-ukai fonts-arphic-uming</span><br></pre></td></tr></table></figure></p><h2 id="删除不需要的软件"><a href="#删除不需要的软件" class="headerlink" title="删除不需要的软件"></a>删除不需要的软件</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">sudo</span> apt-<span class="meta">get</span> --purge autoremove firefox libreoffice-<span class="meta">common</span> unity-webapps-<span class="meta">common</span> thunderbird totem rhythmbox empathy <span class="keyword">brasero </span>simple-scan gnome-mahjongg aisleriot gnome-mines gnome-sudoku cheese transmission-<span class="meta">common</span> gnome-orca webbrowser-app  landscape-client-ui-install onboard deja-dup software-center</span><br></pre></td></tr></table></figure><h3 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h3><p>firefox: Mozilla Firefox浏览器<br>thunderbird：Mozilla浏览器的邮件功能部件所改造的邮件工具<br>totem：影片播放器<br>rhythmbox：音乐播放和管理软件<br>empathy：即时通讯工具<br>brasero：光盘烧录软件<br>simple-scan：扫描工具<br>gnome-mahjongg：麻将游戏–对对碰<br>aisleriot：纸牌游戏<br>gnome-mines：扫雷游戏<br>cheese：摄像头拍照和录像软件cheese<br>transmission-common：BT客户端<br>gnome-orca：屏幕阅读器<br>webbrowser-app：系统自带web浏览器<br>gnome-sudoku：数独游戏<br>landscape-client-ui-install：远程管理软件<br>onboard：虚拟键盘<br>deja-dup：备份工具<br>software-center:ubuntu软件中心</p><h2 id="gdebi"><a href="#gdebi" class="headerlink" title="gdebi"></a>gdebi</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install gdebi</span><br></pre></td></tr></table></figure><h2 id="安装unrar"><a href="#安装unrar" class="headerlink" title="安装unrar"></a>安装unrar</h2><p>Ubuntu默认是不能解压rar文件的，Windows系统下面的大部分压缩软件都是Winrar<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install unrar</span><br></pre></td></tr></table></figure></p><h2 id="安装sogou输入法"><a href="#安装sogou输入法" class="headerlink" title="安装sogou输入法"></a>安装sogou输入法</h2><p>添加文件<code>/etc/apt/sources.list.d/sogoupinyin.list</code>，并添加如下内容<br>deb <a href="http://archive.ubuntukylin.com:10006/ubuntukylin" target="_blank" rel="noopener">http://archive.ubuntukylin.com:10006/ubuntukylin</a> trusty main<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> sogoupinyin</span><br></pre></td></tr></table></figure></p><h2 id="安装Google浏览器"><a href="#安装Google浏览器" class="headerlink" title="安装Google浏览器"></a>安装Google浏览器</h2><p>到 <a href="https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb" target="_blank" rel="noopener">https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</a> 下载最新的安装文件。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -<span class="selector-tag">i</span> google-chrome-stable_current_amd64<span class="selector-class">.deb</span>   </span><br><span class="line">sudo apt-get install -f</span><br></pre></td></tr></table></figure></p><h2 id="修复休眠后CPU风扇狂转问题"><a href="#修复休眠后CPU风扇狂转问题" class="headerlink" title="修复休眠后CPU风扇狂转问题"></a>修复休眠后CPU风扇狂转问题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Reset fan speeds after resume, otherwise they blow at maximum speed</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The idea for this fix was taken from</span></span><br><span class="line"><span class="comment"># https://forums.opensuse.org/showthread.php/506558-Fan-Maximum-speed-after-suspend</span></span><br><span class="line"><span class="comment"># https://launchpad.net/ubuntu/+source/pm-utils/+bug/1455097</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Ubuntu 15.10 has switched to systemd from upstart. Instead of pm-suspend, systemd uses systemd-sleep.</span></span><br><span class="line"><span class="comment"># Instead of running scripts in /etc/pm/sleep.d/ and /usr/lib/pm-utils/sleep.d/ it runs scripts in /lib/systemd/system-sleep/.</span></span><br><span class="line"><span class="comment"># Author: genrong.he@gmail.com</span></span><br><span class="line"><span class="comment"># To be saved as /lib/systemd/system-sleep/fancontrol</span></span><br><span class="line"><span class="comment"># chmod +x fancontrol</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">post)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> /sys/devices/virtual/thermal/cooling_device*</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">type</span>=`cat <span class="variable">$i</span>/<span class="built_in">type</span>`</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$type</span>"</span> = <span class="string">"Fan"</span> ] ; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> 0 &gt; <span class="variable">$i</span>/cur_state</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>Ubuntu 14是采用upstart启动进程，ubuntu系统是基于dedian的系统的，debian已经采用systemd作为启动进程，ubuntu15.10就只有跟着上游变动， 开始使用Systemd启动进程，蓝牙模块默认是打开的，估计添加启动蓝牙控制器的udev rule。另外我发现Linux下使用体验最流畅的浏览器还是firefox，我极力推荐大家还是使用firefox作为默认浏览器。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol><li><a href="http://blog.csdn.net/skykingf/article/details/45267517" target="_blank" rel="noopener">安装Ubuntu 15.10后要做的事</a></li><li><a href="http://www.jianshu.com/p/e13c7787ddf2" target="_blank" rel="noopener">安装Ubuntu15.04后，要做的几件事情</a></li><li><a href="http://tieba.baidu.com/p/2860116269" target="_blank" rel="noopener">ubuntu14.04装完中文字体变成楷体难看死了</a></li><li><a href="http://blog.csdn.net/u014120684/article/details/48247639" target="_blank" rel="noopener">Ubuntu一键配置脚本</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很久以前我就将Linux的各个发行版本，挨个安装过，文字渲染的效果始终比不上Windows，当然可以自己安装infinality字体渲染包，从安装好系统折腾到你能舒适使用，估计得折腾好几天。不能不提Deepin Linux，这个发行版对Linux中文本地化作了很大的贡献。D
      
    
    </summary>
    
      <category term="Linux" scheme="http://wing-ho.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>用Markdown写作</title>
    <link href="http://wing-ho.github.io/2015/10/01/%E7%94%A8Markown%E5%86%99%E4%BD%9C/"/>
    <id>http://wing-ho.github.io/2015/10/01/用Markown写作/</id>
    <published>2015-09-30T16:00:00.000Z</published>
    <updated>2018-09-10T02:24:20.215Z</updated>
    
    <content type="html"><![CDATA[<p>想拥有一个独立的个人博客很久了，想着什么时候自己开发一个类似wordpress的blog程序，然后天天就可以写博客了。理想很美好，但是现实很骨感，就是想着要自己开发一个博客程序，然后再写博客的想法，让写博客的想法一直搁置着。虽然也注册了过一些博客，写过一些文章，但总觉得不是自己想要，别人的平台总是有这样那样的制约。静态博客的出现，让我重新燃起写博客的冲动。特别是Markdown这种轻量级的标记语言，让你可以忽略文章的形式只关注内容。</p><p>关注Node.js开发已经有很长的时间了，在2009年参与我们大学的《有机化学》第五版编写的时候，我负责制作光盘，教案的所有页面就是使用Node.js通过模板生成的。知道Markdown是看到国外很热的Ghost博客程序，当时我就立刻安装测试了一下，当时就被他的双屏同步显示的编辑器惊艳到了，但当时我还在做老师，大部分时间都用来备课上课批改作业什么的，没有什么时间去写技术博客，所以就没有进一步去使用这个博客程序。现在使用Markdown格式书写已经是一种时尚,去CSDN、简书、github及我关注的很多博客都纷纷采用Markdown写作。</p><p>这篇文章放在draft里面很久，本来还想着继续写下去的，但是深入学习Emacs后，我立刻就成了Emacs的忠实粉丝了。神一样的编辑器，这就不得不提Org-mode啦，Org-mode比起Markdwn根本就不一个等级的东西，功能丰富太多，除了可以用于写作外，还可以用于时间管理。不得不说Emacs的学习曲线还是比较陡峭的，但是前人已经种好了树，后来的人可以直接拿来用的，比如：Spacemacs、Purcell、prelude等的配置文件。</p><p>当然对于不想学那么高深的东西，Markdown还是非常简洁明了的东西，至少是它传递给我了，一种要用纯文本去书写的方式。我觉得不论是读文科还是理工科的人，去学习这样的东西都是必要的，会给你一种跟Word写作完全不一样的体验。但前提你得是一个爱倒腾的人，如果你没有这种想法，那就算了，用你的MS Word吧，咱们不是一个世界里的人。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;想拥有一个独立的个人博客很久了，想着什么时候自己开发一个类似wordpress的blog程序，然后天天就可以写博客了。理想很美好，但是现实很骨感，就是想着要自己开发一个博客程序，然后再写博客的想法，让写博客的想法一直搁置着。虽然也注册了过一些博客，写过一些文章，但总觉得不是
      
    
    </summary>
    
      <category term="Hexo" scheme="http://wing-ho.github.io/categories/Hexo/"/>
    
    
  </entry>
  
</feed>
